version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: hrms_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hrms_db
      POSTGRES_USER: hrms_user
      POSTGRES_PASSWORD: hrms_password_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrms_user -d hrms_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hrms_network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: hrms_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      APP_URL: http://backend:3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hrms_db
      DB_USER: hrms_user
      DB_PASSWORD: hrms_password_2024
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - backend_storage:/app/storage
    networks:
      - hrms_network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: hrms_frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - hrms_network

volumes:
  postgres_data:
    driver: local
  backend_storage:
    driver: local

networks:
  hrms_network:
    driver: bridge
